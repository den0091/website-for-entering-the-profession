/**
 * DroneTech Lab - JavaScript –¥–ª—è –æ–¥–Ω–æ—Å—Ç–æ—Ä—ñ–Ω–∫–æ–≤–æ–≥–æ —Å–∞–π—Ç—É
 * 
 * –¶–µ–π —Ñ–∞–π–ª –º—ñ—Å—Ç–∏—Ç—å –≤—Å—é —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å —Å–∞–π—Ç—É:
 * - –ü–ª–∞–≤–Ω–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è
 * - –ê–Ω—ñ–º–∞—Ü—ñ—ó –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ
 * - –†–æ–±–æ—Ç–∞ –∑ —Ñ–æ—Ä–º–æ—é
 * - –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è
 * - –ê–¥–∞–ø—Ç–∏–≤–Ω–∞ –ø–æ–≤–µ–¥—ñ–Ω–∫–∞
 */

// –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –ø—Ä–æ–≥—Ä–∞–º–∏ - —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–µ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
const CONFIG = {
    scrollThreshold: 100,        // –í—ñ–¥—Å—Ç—É–ø –¥–ª—è –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —à–∞–ø–∫–∏
    throttleDelay: 100,          // –ó–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –æ–±–º–µ–∂–µ–Ω–Ω—è —á–∞—Å—Ç–æ—Ç–∏ –≤–∏–∫–ª–∏–∫—ñ–≤
    animationOffset: 50,         // –í—ñ–¥—Å—Ç—É–ø –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ
    surveyToggleSpeed: 500,      // –®–≤–∏–¥–∫—ñ—Å—Ç—å –∞–Ω—ñ–º–∞—Ü—ñ—ó —Ñ–æ—Ä–º–∏
    notificationDuration: 5000   // –ß–∞—Å –ø–æ–∫–∞–∑—É —Å–ø–æ–≤—ñ—â–µ–Ω—å
};

// –°—Ç–∞–Ω –ø—Ä–æ–≥—Ä–∞–º–∏ - –≤—ñ–¥—Å—Ç–µ–∂—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
const appState = {
    lastScrollPosition: 0,       // –û—Å—Ç–∞–Ω–Ω—è –ø–æ–∑–∏—Ü—ñ—è —Å–∫—Ä–æ–ª—É
    isScrollThrottled: false,    // –ß–∏ –æ–±–º–µ–∂–µ–Ω–∞ —á–∞—Å—Ç–æ—Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω—å —Å–∫—Ä–æ–ª—É
    isSurveyVisible: false,      // –ß–∏ –≤—ñ–¥–∫—Ä–∏—Ç–∞ —Ñ–æ—Ä–º–∞ –∑–∞–ø–∏—Å—É
    intersectionObserver: null,  // –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π
    formSubmissionInProgress: false, // –ß–∏ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º–∏
    currentSection: 'home'       // –ü–æ—Ç–æ—á–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞ —Å–µ–∫—Ü—ñ—è
};

/**
 * –ì–û–õ–û–í–ù–ê –§–£–ù–ö–¶–Ü–Ø –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–á
 * –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –≤—Å—ñ –º–æ–¥—É–ª—ñ
 */
function initializeApplication() {
    console.log('üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è DroneTech Lab –≤–µ–±—Å–∞–π—Ç—É...');

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤
    initializeHeaderBehavior();          // –ü–æ–≤–µ–¥—ñ–Ω–∫–∞ —à–∞–ø–∫–∏
    initializeScrollAnimations();        // –ê–Ω—ñ–º–∞—Ü—ñ—ó –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ
    initializeSmoothScrolling();         // –ü–ª–∞–≤–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
    initializeSurveyFunctionality();     // –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —Ñ–æ—Ä–º–∏
    initializeFormHandling();            // –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏
    initializeTableInteractions();       // –í–∑–∞—î–º–æ–¥—ñ—è –∑ —Ç–∞–±–ª–∏—Ü–µ—é
    initializeFeatureCards();            // –ê–Ω—ñ–º–∞—Ü—ñ—ó –∫–∞—Ä—Ç–æ–∫
    initializeErrorHandling();           // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
    initializePerformanceOptimizations(); // –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
    initializeHeroButton();              // –ö–Ω–æ–ø–∫–∞ –≤ –≥–µ—Ä–æ–π-—Å–µ–∫—Ü—ñ—ó

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø—Ä–æ —É—Å–ø—ñ—Ö (–¥–ª—è PHP)
    setTimeout(checkForSuccessMessage, 1000);

    console.log('‚úÖ DroneTech Lab - –≤–µ–±—Å–∞–π—Ç —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
}

/**
 * –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –ö–ù–û–ü–ö–ò –ì–ï–†–û–Ø
 * –î–æ–¥–∞—î –æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ—ó –∫–Ω–æ–ø–∫–∏ "–ü–æ—á–∞—Ç–∏ –Ω–∞–≤—á–∞–Ω–Ω—è"
 */
function initializeHeroButton() {
    const heroButton = document.getElementById('heroButton');
    if (heroButton) {
        heroButton.addEventListener('click', function() {
            // –ü—Ä–æ–∫—Ä—É—á—É—î–º–æ –¥–æ —Å–µ–∫—Ü—ñ—ó –∫—É—Ä—Å—ñ–≤ –ø—Ä–∏ –∫–ª—ñ–∫—É
            const coursesSection = document.getElementById('courses');
            if (coursesSection) {
                const headerHeight = document.getElementById('mainHeader').offsetHeight;
                const targetPosition = coursesSection.offsetTop - headerHeight - 20;
                
                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });
            }
        });
    }
}

/**
 * –ü–ï–†–ï–í–Ü–†–ö–ê –ü–û–í–Ü–î–û–ú–õ–ï–ù–¨ –ü–†–û –£–°–ü–Ü–•
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ —î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É –≤—ñ–¥–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º–∏
 */
function checkForSuccessMessage() {
    const successMessage = document.querySelector('.success-message');
    if (successMessage) {
        // –ü—Ä–æ–∫—Ä—É—á—É—î–º–æ –¥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        successMessage.scrollIntoView({ behavior: 'smooth', block: 'start' });

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ö–æ–≤–∞—î–º–æ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (successMessage.parentNode) {
                successMessage.style.opacity = '0';
                successMessage.style.transform = 'translateY(-20px)';
                setTimeout(() => {
                    if (successMessage.parentNode) {
                        successMessage.remove();
                    }
                }, 500);
            }
        }, 8000);
    }
}

/**
 * –ú–û–î–£–õ–¨ –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –®–ê–ü–ö–û–Æ –¢–ê –ê–ö–¢–ò–í–ù–ò–ú–ò –ü–û–°–ò–õ–ê–ù–ù–Ø–ú–ò
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
 * - –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —à–∞–ø–∫–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ –≤–Ω–∏–∑
 * - –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø–æ—Å–∏–ª–∞–Ω—å –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ
 * - –ü–ª–∞–≤–Ω—É –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é –ø–æ —Å–µ–∫—Ü—ñ—è–º
 */
function initializeHeaderBehavior() {
    const headerElement = document.getElementById('mainHeader');
    const navLinks = document.querySelectorAll('.header__link');

    if (!headerElement) {
        console.warn('‚ö†Ô∏è Header element not found');
        return;
    }

    /**
     * –û–ù–û–í–õ–ï–ù–ù–Ø –ê–ö–¢–ò–í–ù–ò–• –ü–û–°–ò–õ–ê–ù–¨ –ü–†–ò –°–ö–†–û–õ–Ü
     * –í–∏–∑–Ω–∞—á–∞—î –ø–æ—Ç–æ—á–Ω—É —Å–µ–∫—Ü—ñ—é —Ç–∞ –ø—ñ–¥—Å–≤—ñ—á—É—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
     */
    function updateActiveNavLink() {
        const sections = document.querySelectorAll('section, .window');
        const scrollPos = window.pageYOffset + 100; // –ù–µ–≤–µ–ª–∏–∫–∏–π –≤—ñ–¥—Å—Ç—É–ø

        sections.forEach(section => {
            const sectionTop = section.offsetTop;
            const sectionHeight = section.clientHeight;
            const sectionId = section.getAttribute('id');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–æ—Ç–æ—á–Ω–∞ –ø–æ–∑–∏—Ü—ñ—è —Å–∫—Ä–æ–ª—É –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –º–µ–∂–∞—Ö —Å–µ–∫—Ü—ñ—ó
            if (scrollPos >= sectionTop && scrollPos < sectionTop + sectionHeight) {
                navLinks.forEach(link => {
                    link.classList.remove('active');
                    if (link.getAttribute('href') === `#${sectionId}`) {
                        link.classList.add('active');
                        appState.currentSection = sectionId;
                    }
                });
            }
        });
    }

    /**
     * –û–ë–†–û–ë–ö–ê –ü–û–î–Ü–á –°–ö–†–û–õ–£
     * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è/–ø–æ–∫–∞–∑ —à–∞–ø–∫–∏ —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
     */
    function handleScrollEvent() {
        if (appState.isScrollThrottled) return;

        const currentScrollPosition = window.pageYOffset;
        const scrollDirection = currentScrollPosition > appState.lastScrollPosition;

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —à–∞–ø–∫—É –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ –≤–Ω–∏–∑, –ø–æ–∫–∞–∑—É—î–º–æ –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ –≤–≥–æ—Ä—É
        if (scrollDirection && currentScrollPosition > CONFIG.scrollThreshold) {
            headerElement.classList.add('hidden');
        } else {
            headerElement.classList.remove('hidden');
        }

        appState.lastScrollPosition = currentScrollPosition;
        appState.isScrollThrottled = true;

        // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
        updateActiveNavLink();

        // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å —Ç—Ä–æ—Ç–ª—ñ–Ω–≥—É –ø—ñ—Å–ª—è –∑–∞—Ç—Ä–∏–º–∫–∏
        setTimeout(() => {
            appState.isScrollThrottled = false;
        }, CONFIG.throttleDelay);
    }

    // –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è —Å–∫—Ä–æ–ª—É –∑ requestAnimationFrame
    let ticking = false;
    function updateHeader() {
        handleScrollEvent();
        ticking = false;
    }

    function requestTick() {
        if (!ticking) {
            requestAnimationFrame(updateHeader);
            ticking = true;
        }
    }

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ —Å–∫—Ä–æ–ª—É
    window.addEventListener('scroll', requestTick, { passive: true });

    /**
     * –û–ë–†–û–ë–ù–ò–ö –ö–õ–Ü–ö–£ –ü–û –ù–ê–í–Ü–ì–ê–¶–Ü–ô–ù–ò–ú –ü–û–°–ò–õ–ê–ù–ù–Ø–ú
     * –ó–∞–±–µ–∑–ø–µ—á—É—î –ø–ª–∞–≤–Ω—É –ø—Ä–æ–∫—Ä—É—Ç–∫—É –¥–æ —Å–µ–∫—Ü—ñ–π
     */
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault(); // –ó–∞–ø–æ–±—ñ–≥–∞—î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ–π –ø–æ–≤–µ–¥—ñ–Ω—Ü—ñ
            
            const targetId = this.getAttribute('href').substring(1);
            const targetSection = document.getElementById(targetId);
            
            if (targetSection) {
                const headerHeight = headerElement.offsetHeight;
                const targetPosition = targetSection.offsetTop - headerHeight - 20;

                // –ü–ª–∞–≤–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });

                // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω
                navLinks.forEach(navLink => navLink.classList.remove('active'));
                this.classList.add('active');
                appState.currentSection = targetId;
            }
        });
    });
}

/**
 * –ú–û–î–£–õ–¨ –ê–ù–Ü–ú–ê–¶–Ü–ô –ü–†–ò –°–ö–†–û–õ–Ü
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î Intersection Observer –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø—Ä–∏ —ó—Ö –ø–æ—è–≤—ñ –≤ –æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ
 */
function initializeScrollAnimations() {
    const observerOptions = {
        threshold: 0.1,          // –ï–ª–µ–º–µ–Ω—Ç –≤–≤–∞–∂–∞—î—Ç—å—Å—è –≤–∏–¥–∏–º–∏–º –ø—Ä–∏ 10% –ø–æ–ø–∞–¥–∞–Ω–Ω—ñ
        rootMargin: `0px 0px -${CONFIG.animationOffset}px 0px` // –í—ñ–¥—Å—Ç—É–ø –∑–Ω–∏–∑—É
    };

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π
    appState.intersectionObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // –ê–Ω—ñ–º—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –ø—Ä–∏ –π–æ–≥–æ –ø–æ—è–≤—ñ
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';

                // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∞–Ω—ñ–º–∞—Ü—ñ—ó –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
                if (entry.target.classList.contains('feature-card')) {
                    entry.target.style.transition = 'all 0.6s ease 0.1s';
                } else if (entry.target.classList.contains('window')) {
                    const delay = Array.from(entry.target.parentNode.children).indexOf(entry.target) * 0.1;
                    entry.target.style.transition = `all 0.6s ease ${delay}s`;
                }
            }
        });
    }, observerOptions);

    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∞–Ω—ñ–º—É–≤–∞—Ç–∏
    const animatedElements = document.querySelectorAll('.window, .feature-card, .hero-content');

    animatedElements.forEach((element) => {
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
        element.style.opacity = '0';
        element.style.transform = 'translateY(30px)';
        element.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        
        // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–æ —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á–∞
        appState.intersectionObserver.observe(element);
    });
}

/**
 * –ú–û–î–£–õ–¨ –ü–õ–ê–í–ù–û–á –ü–†–û–ö–†–£–¢–ö–ò
 * (–í–∂–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –≤ initializeHeaderBehavior)
 */
function initializeSmoothScrolling() {
    // –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –≤–∂–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –≤ initializeHeaderBehavior
}

/**
 * –ú–û–î–£–õ–¨ –§–£–ù–ö–¶–Ü–û–ù–ê–õ–£ –û–ü–ò–¢–£–í–ê–ù–ù–Ø
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –ø–æ–∫–∞–∑/–ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–∏ –∑–∞–ø–∏—Å—É
 */
function initializeSurveyFunctionality() {
    const surveyToggleButton = document.getElementById('surveyToggle');
    const surveySection = document.getElementById('surveySection');

    if (!surveyToggleButton || !surveySection) {
        console.warn('‚ö†Ô∏è Survey elements not found');
        return;
    }

    /**
     * –ü–ï–†–ï–ú–ò–ö–ê–ù–ù–Ø –í–ò–î–ò–ú–û–°–¢–Ü –§–û–†–ú–ò
     * –ü–æ–∫–∞–∑—É—î –∞–±–æ —Ö–æ–≤–∞—î —Ñ–æ—Ä–º—É –∑–∞–ø–∏—Å—É –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
     */
    function toggleSurveyVisibility() {
        if (appState.formSubmissionInProgress) return;

        appState.isSurveyVisible = !appState.isSurveyVisible;

        if (appState.isSurveyVisible) {
            // –ü–û–ö–ê–ó –§–û–†–ú–ò
            surveySection.style.display = 'block';
            
            // –ê–Ω—ñ–º–∞—Ü—ñ—è –ø–æ—è–≤–∏
            requestAnimationFrame(() => {
                surveySection.classList.add('show');
                surveyToggleButton.textContent = '–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ —Ñ–æ—Ä–º—É';
                surveyToggleButton.classList.add('active');
            });

            // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ —Ñ–æ—Ä–º–∏
            const headerElement = document.getElementById('mainHeader');
            const headerHeight = headerElement ? headerElement.offsetHeight : 0;
            const surveyPosition = surveySection.offsetTop - headerHeight - 20;

            window.scrollTo({
                top: surveyPosition,
                behavior: 'smooth'
            });

            // –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä—à–æ–º—É –ø–æ–ª—ñ —Ñ–æ—Ä–º–∏
            setTimeout(() => {
                const firstInput = surveySection.querySelector('input, select, textarea');
                if (firstInput) firstInput.focus();
            }, 600);

        } else {
            // –ü–†–ò–•–û–í–£–í–ê–ù–ù–Ø –§–û–†–ú–ò
            surveySection.classList.remove('show');
            surveyToggleButton.classList.remove('active');

            setTimeout(() => {
                surveySection.style.display = 'none';
                surveyToggleButton.textContent = '–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫—É—Ä—Å';
            }, CONFIG.surveyToggleSpeed);
        }
    }

    // –û–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –ø–æ –∫–Ω–æ–ø—Ü—ñ –ø–µ—Ä–µ–º–∏–∫–∞—á–∞
    surveyToggleButton.addEventListener('click', toggleSurveyVisibility);

    // –ó–∞–∫—Ä–∏—Ç—Ç—è —Ñ–æ—Ä–º–∏ –ø–æ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –Ω–µ—é
    document.addEventListener('click', (e) => {
        if (appState.isSurveyVisible &&
            surveySection &&
            !surveySection.contains(e.target) &&
            e.target !== surveyToggleButton &&
            !surveyToggleButton.contains(e.target)) {
            toggleSurveyVisibility();
        }
    });

    // –ó–∞–∫—Ä–∏—Ç—Ç—è —Ñ–æ—Ä–º–∏ –ø–æ –∫–ª–∞–≤—ñ—à—ñ ESC
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && appState.isSurveyVisible) {
            toggleSurveyVisibility();
        }
    });
}

/**
 * –ú–û–î–£–õ–¨ –û–ë–†–û–ë–ö–ò –§–û–†–ú–ò
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—é —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º–∏
 */
function initializeFormHandling() {
    const surveyForm = document.getElementById('surveyForm');

    if (!surveyForm) {
        console.warn('‚ö†Ô∏è Survey form not found');
        return;
    }

    // –û–ë–ú–ï–ñ–ï–ù–ù–Ø –ö–Ü–õ–¨–ö–û–°–¢–Ü –û–ë–†–ê–ù–ò–• –ß–ï–ö–ë–û–ö–°–Ü–í (–¥–æ 3)
    const checkboxes = document.querySelectorAll('input[name="favoriteAspects[]"]');
    checkboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            const checkedBoxes = document.querySelectorAll('input[name="favoriteAspects[]"]:checked');
            if (checkedBoxes.length > 3) {
                this.checked = false;
                showNotification('–ú–æ–∂–Ω–∞ –≤–∏–±—Ä–∞—Ç–∏ –Ω–µ –±—ñ–ª—å—à–µ —Ç—Ä—å–æ—Ö –Ω–∞–ø—Ä—è–º–∫—ñ–≤', 'warning');

                // –ê–Ω—ñ–º–∞—Ü—ñ—è –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è
                this.parentElement.style.transform = 'translateX(-10px)';
                setTimeout(() => {
                    this.parentElement.style.transform = 'translateX(0)';
                }, 300);
            }
        });
    });

    // –üOK–†–ê–©–ï–ù–ê –í–ê–õ–Ü–î–ê–¶–Ü–Ø –í –†–ï–ê–õ–¨–ù–û–ú–£ –ß–ê–°–Ü
    const formInputs = surveyForm.querySelectorAll('input, select, textarea');
    formInputs.forEach(input => {
        // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–∏ –≤—Ç—Ä–∞—Ç—ñ —Ñ–æ–∫—É—Å—É
        input.addEventListener('blur', function() {
            validateField(this);
        });

        // –û—á–∏—â–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ
        input.addEventListener('input', function() {
            clearFieldError(this);
            
            // –í—ñ–∑—É–∞–ª—å–Ω–∏–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ
            if (this.checkValidity()) {
                this.classList.add('valid');
            } else {
                this.classList.remove('valid');
            }
        });
    });

    /**
     * –í–ê–õ–Ü–î–ê–¶–Ü–Ø –û–ö–†–ï–ú–û–ì–û –ü–û–õ–Ø
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö
     */
    function validateField(field) {
        const value = field.value.trim();

        switch(field.type) {
            case 'email':
                if (value && !isValidEmail(value)) {
                    showFieldError(field, '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É email –∞–¥—Ä–µ—Å—É');
                    return false;
                }
                break;

            case 'text':
                if (field.required && !value) {
                    showFieldError(field, '–¶–µ –ø–æ–ª–µ –æ–±–æ–≤\'—è–∑–∫–æ–≤–µ –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è');
                    return false;
                } else if (field.id === 'playerName' && value.length < 2) {
                    showFieldError(field, '–Ü–º\'—è –ø–æ–≤–∏–Ω–Ω–æ –º—ñ—Å—Ç–∏—Ç–∏ –ø—Ä–∏–Ω–∞–π–º–Ω—ñ 2 —Å–∏–º–≤–æ–ª–∏');
                    return false;
                }
                break;

            case 'select-one':
                if (field.required && !value) {
                    showFieldError(field, '–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è');
                    return false;
                }
                break;
        }

        clearFieldError(field);
        return true;
    }

    // –í–ê–õ–Ü–î–ê–¶–Ü–Ø –í–°–Ü–Ñ–á –§–û–†–ú–ò –ü–ï–†–ï–î –í–Ü–î–ü–†–ê–í–ö–û–Æ
    surveyForm.addEventListener('submit', function(e) {
        if (!validateForm()) {
            e.preventDefault(); // –ó–∞–ø–æ–±—ñ–≥–∞—î –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Ñ–æ—Ä–º–∏
            showNotification('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–ø—Ä–∞–≤—Ç–µ –ø–æ–º–∏–ª–∫–∏ –≤ —Ñ–æ—Ä–º—ñ', 'error');

            // –ü—Ä–æ–∫—Ä—É—á—É—î–º–æ –¥–æ –ø–µ—Ä—à–æ—ó –ø–æ–º–∏–ª–∫–∏
            const firstError = surveyForm.querySelector('.error');
            if (firstError) {
                firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
        }
    });

    /**
     * –í–ê–õ–Ü–î–ê–¶–Ü–Ø –í–°–Ü–Ñ–á –§–û–†–ú–ò
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î –≤—Å—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è —Ñ–æ—Ä–º–∏
     */
    function validateForm() {
        let isValid = true;
        const playerName = document.getElementById('playerName');
        const playerEmail = document.getElementById('playerEmail');
        const playerAge = document.getElementById('playerAge');
        const gameRating = document.querySelector('input[name="gameRating"]:checked');
        const playtime = document.getElementById('playtime');

        // –í–ê–õ–Ü–î–ê–¶–Ü–Ø –Ü–ú–ï–ù–Ü
        if (!playerName.value.trim()) {
            showFieldError(playerName, '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º\'—è');
            isValid = false;
        } else if (playerName.value.trim().length < 2) {
            showFieldError(playerName, '–Ü–º\'—è –ø–æ–≤–∏–Ω–Ω–æ –º—ñ—Å—Ç–∏—Ç–∏ –ø—Ä–∏–Ω–∞–π–º–Ω—ñ 2 —Å–∏–º–≤–æ–ª–∏');
            isValid = false;
        }

        // –í–ê–õ–Ü–î–ê–¶–Ü–Ø EMAIL
        if (!playerEmail.value.trim()) {
            showFieldError(playerEmail, '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å email –∞–¥—Ä–µ—Å—É');
            isValid = false;
        } else if (!isValidEmail(playerEmail.value.trim())) {
            showFieldError(playerEmail, '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É email –∞–¥—Ä–µ—Å—É');
            isValid = false;
        }

        // –í–ê–õ–Ü–î–ê–¶–Ü–Ø –í–Ü–ö–£
        if (!playerAge.value) {
            showFieldError(playerAge, '–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –≤—ñ–∫–æ–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é');
            isValid = false;
        }

        // –í–ê–õ–Ü–î–ê–¶–Ü–Ø –†–ï–ô–¢–ò–ù–ì–£
        if (!gameRating) {
            showNotification('–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –≤–∞—à —Ä—ñ–≤–µ–Ω—å –¥–æ—Å–≤—ñ–¥—É', 'error');
            isValid = false;
        }

        // –í–ê–õ–Ü–î–ê–¶–Ü–Ø –ö–£–†–°–£
        if (!playtime.value) {
            showFieldError(playtime, '–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –∫—É—Ä—Å');
            isValid = false;
        }

        return isValid;
    }

    // –î–û–ü–û–ú–Ü–ñ–ù–Ü –§–£–ù–ö–¶–Ü–á –í–ê–õ–Ü–î–ê–¶–Ü–á

    /**
     * –ü–ï–†–ï–í–Ü–†–ö–ê –ö–û–†–ï–ö–¢–ù–û–°–¢–Ü EMAIL
     * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ä–µ–≥—É–ª—è—Ä–Ω–∏–π –≤–∏—Ä–∞–∑ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç—É email
     */
    function isValidEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    /**
     * –ü–û–ö–ê–ó –ü–û–ú–ò–õ–ö–ò –ü–û–õ–Ø
     * –î–æ–¥–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –ø—ñ–¥ –ø–æ–ª–µ–º
     */
    function showFieldError(field, message) {
        clearFieldError(field);
        field.classList.add('error');

        const errorElement = document.createElement('div');
        errorElement.className = 'field-error';
        errorElement.textContent = message;

        field.parentNode.appendChild(errorElement);
    }

    /**
     * –û–ß–ò–©–ï–ù–ù–Ø –ü–û–ú–ò–õ–ö–ò –ü–û–õ–Ø
     * –í–∏–¥–∞–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
     */
    function clearFieldError(field) {
        field.classList.remove('error');
        const existingError = field.parentNode.querySelector('.field-error');
        if (existingError) {
            existingError.remove();
        }
    }
}

/**
 * –ú–û–î–£–õ–¨ –í–ó–ê–Ñ–ú–û–î–Ü–á –ó –¢–ê–ë–õ–ò–¶–ï–Æ
 * –î–æ–¥–∞—î —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –¥–æ —Ç–∞–±–ª–∏—Ü—ñ –∫—É—Ä—Å—ñ–≤
 */
function initializeTableInteractions() {
    const tableRows = document.querySelectorAll('.events-table tbody tr');

    tableRows.forEach(row => {
        // –û–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –ø–æ —Ä—è–¥–∫—É —Ç–∞–±–ª–∏—Ü—ñ
        row.addEventListener('click', function() {
            // –í–∏–¥–∞–ª—è—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –∑ —É—Å—ñ—Ö —Ä—è–¥–∫—ñ–≤
            tableRows.forEach(r => r.classList.remove('active'));

            // –î–æ–¥–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –¥–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä—è–¥–∫–∞
            this.classList.add('active');

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ —Ä—è–¥–∫–∞
            const cells = this.querySelectorAll('td');
            const eventData = {
                date: cells[0].textContent,
                event: cells[1].textContent,
                description: cells[2].textContent,
                level: cells[3].textContent
            };

            // –ü–æ–∫–∞–∑—É—î–º–æ –¥–µ—Ç–∞–ª—ñ –ø–æ–¥—ñ—ó
            showEventDetails(eventData);
        });

        // –ï—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ
        row.addEventListener('mouseenter', function() {
            this.style.transform = 'translateX(5px)';
        });

        row.addEventListener('mouseleave', function() {
            if (!this.classList.contains('active')) {
                this.style.transform = 'translateX(0)';
            }
        });
    });
}

/**
 * –ü–û–ö–ê–ó –î–ï–¢–ê–õ–ï–ô –ü–û–î–Ü–á
 * –°—Ç–≤–æ—Ä—é—î —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑ –¥–µ—Ç–∞–ª—å–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ø–æ–¥—ñ—é
 */
function showEventDetails(eventData) {
    const notificationMessage = `
        üóìÔ∏è <strong>${eventData.event}</strong><br>
        üìÖ –î–∞—Ç–∞: ${eventData.date}<br>
        üìù ${eventData.description}<br>
        üéØ –†—ñ–≤–µ–Ω—å: ${eventData.level}
    `;

    showNotification(notificationMessage, 'info');
}

/**
 * –ú–û–î–£–õ–¨ –ö–ê–†–¢–û–ö –û–°–û–ë–õ–ò–í–û–°–¢–ï–ô
 * –î–æ–¥–∞—î —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –¥–æ –∫–∞—Ä—Ç–æ–∫ –Ω–∞–ø—Ä—è–º–∫—ñ–≤ –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ
 */
function initializeFeatureCards() {
    const featureCards = document.querySelectorAll('.feature-card');

    featureCards.forEach(card => {
        // –ï—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-10px) scale(1.02)';
            this.style.boxShadow = '0 15px 40px rgba(0, 153, 255, 0.3)';
        });

        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(-5px) scale(1)';
            this.style.boxShadow = 'var(--shadow-lg)';
        });

        // –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–∏ –∫–ª—ñ–∫—É
        card.addEventListener('click', function() {
            const title = this.querySelector('.feature-card__title').textContent;
            const description = this.querySelector('.feature-card__description').textContent;

            showNotification(`<strong>${title}</strong><br>${description}`, 'info');
        });
    });
}

/**
 * –ú–û–î–£–õ–¨ –°–ò–°–¢–ï–ú–ò –°–ü–û–í–Ü–©–ï–ù–¨
 * –°—Ç–≤–æ—Ä—é—î –∫—Ä–∞—Å–∏–≤—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
 */
function showNotification(message, type = 'info') {
    // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    const oldNotifications = document.querySelectorAll('.notification');
    oldNotifications.forEach(notification => {
        notification.style.transform = 'translateX(400px)';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    });

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    const notification = document.createElement('div');
    notification.className = `notification notification--${type}`;

    // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ–ª—ñ—Ä —Ç–∞ —ñ–∫–æ–Ω–∫—É –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É
    let backgroundColor, icon;
    switch(type) {
        case 'success':
            backgroundColor = 'rgba(0, 204, 102, 0.95)';
            icon = '‚úÖ';
            break;
        case 'error':
            backgroundColor = 'rgba(244, 67, 54, 0.95)';
            icon = '‚ùå';
            break;
        case 'warning':
            backgroundColor = 'rgba(255, 152, 0, 0.95)';
            icon = '‚ö†Ô∏è';
            break;
        case 'info':
            backgroundColor = 'rgba(0, 153, 255, 0.95)';
            icon = '‚ÑπÔ∏è';
            break;
        default:
            backgroundColor = 'rgba(0, 153, 255, 0.95)';
            icon = 'üöÅ';
    }

    // HTML –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    notification.innerHTML = `
        <div class="notification-content">
            <span class="notification-icon">${icon}</span>
            <span class="notification-message">${message}</span>
            <button class="notification-close" aria-label="–ó–∞–∫—Ä–∏—Ç–∏">&times;</button>
        </div>
    `;

    // –°—Ç–∏–ª—ñ –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    notification.style.cssText = `
        position: fixed;
        top: 140px;
        right: 20px;
        background: ${backgroundColor};
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        z-index: 10000;
        font-family: 'Tech Font', monospace;
        max-width: 350px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        transform: translateX(400px);
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    `;

    // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –≤–º—ñ—Å—Ç—É —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    const style = document.createElement('style');
    style.textContent = `
        .notification-content {
            display: flex;
            align-items: flex-start;
            gap: 0.75rem;
        }
        .notification-icon {
            font-size: 1.2rem;
            flex-shrink: 0;
            margin-top: 0.1rem;
        }
        .notification-message {
            flex: 1;
            line-height: 1.5;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
        }
        .notification-close {
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
            padding: 0;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: background-color 0.2s ease;
            flex-shrink: 0;
        }
        .notification-close:hover {
            background: rgba(255, 255, 255, 0.2);
        }
    `;
    document.head.appendChild(style);

    document.body.appendChild(notification);

    // –ê–Ω—ñ–º–∞—Ü—ñ—è –ø–æ—è–≤–∏
    requestAnimationFrame(() => {
        notification.style.transform = 'translateX(0)';
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –∑–∞–∫—Ä–∏—Ç—Ç—è
    const closeButton = notification.querySelector('.notification-close');
    closeButton.addEventListener('click', function() {
        notification.style.transform = 'translateX(400px)';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    });

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–∫—Ä–∏—Ç—Ç—è
    const autoCloseTimeout = setTimeout(() => {
        if (notification.parentNode) {
            notification.style.transform = 'translateX(400px)';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }
    }, CONFIG.notificationDuration);

    // –ó—É–ø–∏–Ω–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∑–∞–∫—Ä–∏—Ç—Ç—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ
    notification.addEventListener('mouseenter', () => {
        clearTimeout(autoCloseTimeout);
    });

    notification.addEventListener('mouseleave', () => {
        setTimeout(() => {
            if (notification.parentNode) {
                notification.style.transform = 'translateX(400px)';
                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.parentNode.removeChild(notification);
                    }
                }, 300);
            }
        }, 1000);
    });
}

/**
 * –ú–û–î–£–õ–¨ –û–ü–¢–ò–ú–Ü–ó–ê–¶–Ü–á –ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–Ü
 * –î–æ–¥–∞—î –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
 */
function initializePerformanceOptimizations() {
    // –í—ñ–¥–∫–ª–∞–¥–∞—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤
    if ('requestIdleCallback' in window) {
        requestIdleCallback(() => {
            console.log('üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤...');
        });
    }

    // –í–∏–º–∫–Ω–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ–π –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –∑–º–µ–Ω—à–µ–Ω–Ω—è —Ä—É—Ö—É
    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');
    if (mediaQuery.matches) {
        document.documentElement.style.setProperty('--transition', 'none');
        document.documentElement.style.setProperty('--transition-slow', 'none');
    }
}

/**
 * –ú–û–î–£–õ–¨ –û–ë–†–û–ë–ö–ò –ü–û–ú–ò–õ–û–ö
 * –ü–µ—Ä–µ—Ö–æ–ø–ª—é—î —Ç–∞ –æ–±—Ä–æ–±–ª—è—î –ø–æ–º–∏–ª–∫–∏ JavaScript
 */
function initializeErrorHandling() {
    // –ì–ª–æ–±–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
    window.addEventListener('error', function(event) {
        console.error('‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è:', event.error);
        showNotification('–°—Ç–∞–ª–∞—Å—è –Ω–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É.', 'error');
    });

    // –û–±—Ä–æ–±–∫–∞ –Ω–µ–≤–¥–∞–ª–∏—Ö –ø—Ä–æ–º—ñ—Å—ñ–≤
    window.addEventListener('unhandledrejection', function(event) {
        console.error('‚ùå –ù–µ–æ–±—Ä–æ–±–ª–µ–Ω–∞ –ø—Ä–æ–º—ñ—Å-–ø–æ–º–∏–ª–∫–∞:', event.reason);
        showNotification('–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó.', 'error');
    });

    // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å
    document.addEventListener('error', function(event) {
        if (event.target.tagName === 'IMG') {
            console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:', event.target.src);
            event.target.style.opacity = '0.5'; // –ü–æ–∫–∞–∑—É—î–º–æ, —â–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—å
        }
    }, true);
}

/**
 * –î–û–î–ê–¢–ö–û–í–Ü –£–¢–Ü–õ–Ü–¢–ò
 */

/**
 * –§–£–ù–ö–¶–Ü–Ø THROTTLE - –æ–±–º–µ–∂–µ–Ω–Ω—è —á–∞—Å—Ç–æ—Ç–∏ –≤–∏–∫–ª–∏–∫—ñ–≤
 * –ó–∞–ø–æ–±—ñ–≥–∞—î –Ω–∞–¥–º—ñ—Ä–Ω–æ–º—É –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó –ø—Ä–∏ —à–≤–∏–¥–∫–∏—Ö –ø–æ–¥—ñ—è—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Å–∫—Ä–æ–ª)
 */
function throttle(func, limit) {
    let inThrottle;
    return function() {
        const args = arguments;
        const context = this;
        if (!inThrottle) {
            func.apply(context, args);
            inThrottle = true;
            setTimeout(() => inThrottle = false, limit);
        }
    }
}

/**
 * –§–£–ù–ö–¶–Ü–Ø DEBOUNCE - –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –±–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤–æ–º—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—é
 * –í—ñ–¥–∫–ª–∞–¥–∞—î –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –¥–æ —Ç–∏—Ö –ø—ñ—Ä, –ø–æ–∫–∏ –Ω–µ –º–∏–Ω—É–≤ –ø–µ–≤–Ω–∏–π —á–∞—Å –±–µ–∑ –Ω–æ–≤–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤
 */
function debounce(func, wait, immediate) {
    let timeout;
    return function() {
        const context = this, args = arguments;
        const later = function() {
            timeout = null;
            if (!immediate) func.apply(context, args);
        };
        const callNow = immediate && !timeout;
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
        if (callNow) func.apply(context, args);
    };
}

// –ó–ê–ü–£–°–ö –ü–†–û–ì–†–ê–ú–ò
// –ß–µ–∫–∞—î–º–æ –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM –ø–µ—Ä–µ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—î—é
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeApplication);
} else {
    initializeApplication();
}

// –ï–ö–°–ü–û–†–¢ –î–õ–Ø –ì–õ–û–ë–ê–õ–¨–ù–û–ì–û –í–ò–ö–û–†–ò–°–¢–ê–ù–ù–Ø
// –†–æ–±–∏–º–æ –æ—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–æ—Å—Ç—É–ø–Ω–∏–º–∏ –∑–æ–≤–Ω—ñ (–¥–ª—è –∫–æ–Ω—Å–æ–ª—ñ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞)
window.DroneTechApp = {
    showNotification,
    initializeApplication,
    config: CONFIG
};
